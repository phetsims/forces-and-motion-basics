none:                                  None
force:                                 Force
values:                                Values
redWins:                               Red Wins!
frictionForce:                         Friction Force
pause:                                 Pause
friction:                              Friction
forces-and-motion-basics.title:        'Forces and Motion: Basics'
leftForce:                             Left Force
appliedForce:                          Applied Force
rightForce:                            Right Force
pattern.0massUnitsKilograms:           '{0} kg'
pattern.0valueUnitsNewtons:            '{0} newtons'
acceleration:                          Acceleration
pattern.0name.1valueUnitsAcceleration: '{0}: {1} m/s<sup>2</sup>'
pattern.0name.1valueUnitsVelocity:     '{0} m/s'
lots:                                  Lots
forces:                                Forces
netForce:                              Net Force
motion:                                Motion
go:                                    Go!
sumOfForcesEqualsZero:                 Sum of Forces = 0
blueWins:                              Blue Wins!
sumOfForces:                           Sum of Forces
speed:                                 Speed
stopwatch:                             Stopwatch
return:                                Return
masses:                                Masses
pattern.0valueUnitsN:                  '{0}N'
unknownValueIndicator:                 '?'
netForcePullerColors:                  Net Force Puller Colors
blueAndRed:                            Blue and Red
purpleAndOrange:                       Purple and Orange
purpleWins:                            Purple Wins!
orangeWins:                            Orange Wins!

# keyboard help dialog strings
keyboardHelpDialog:
  fromAnywhereInSim:    From Anywhere in Screen
  startGame:            Start tug-of-war game
  pauseGame:            Pause tug-of-war game
  returnCartToCenter:   Return cart to center
  pullerNavigation:     Puller Navigation
  selectPuller:         Select puller
  grabPuller:           Grab selected puller
  moveGrabbedPuller:    Move grabbed puller
  dropPuller:           Drop puller
  itemNavigation:       Item Navigation
  selectItem:           Select item
  grabItem:             Grab selected item
  moveGrabbedItem:      Move grabbed item
  dropItem:             Drop item
  adjustAppliedForce:   Adjust Applied Force
  appliedForceControls: Applied Force Controls
  zeroAppliedForce:     Zero applied force

# accessibility strings
a11y:
  preferences:
    netForcePullerColors:
      accessibleHelpText: Select team colors for tug-of-war game.
  keyboardHelpDialog:
    fromAnywhereInSim:
      startGameDescription:          Start tug-of-war game with { $altOrOptionKey } plus G key.
      pauseGameDescription:          Pause tug-of-war game with { $altOrOptionKey } plus P key.
      returnCartToCenterDescription: Return cart to center with { $altOrOptionKey } plus B key.
    pullerNavigation:
      selectPullerDescription:      Select puller with Left and Right Arrow keys.
      grabPullerDescription:        Grab selected puller with Space or Enter keys.
      moveGrabbedPullerDescription: Move grabbed puller with Left and Right Arrow keys.
      dropPullerDescription:        Drop puller with Space or Enter keys.
    itemNavigation:
      selectItemDescription:      Select item with Left and Right Arrow keys.
      grabItemDescription:        Grab selected item with Space or Enter keys.
      moveGrabbedItemDescription: Move grabbed item with Left and Right Arrow keys.
      dropItemDescription:        Drop item with Space or Enter keys.
    appliedForceControls:
      zeroAppliedForceDescription: Zero applied force with 0 key.
  netForceScreen:
    colorName: |-
               { $color ->
                   [blue]   Blue
                   [red]    Red
                   [purple] Purple
                  *[orange] Orange
               }
    teamName:  |-
               { $color ->
                   [blue]   Blue Team
                   [red]    Red Team
                   [purple] Purple Team
                  *[orange] Orange Team
               }
    screenSummary:
      playArea:
        description: There is a tug-of-war game between { $leftColor } and { $rightColor } teams over a wheeled cart full of candy. { $leftTeamName } pullers are on left, { $rightTeamName } pullers are on right. Cart sits on flat surface with a rope attached to each side. Ropes have knots that pullers can grab. There are buttons to start or pause tug-of-war or return cart to center.
      controlArea:
        description: Turn on sum of forces, values, or speed. Reset sim to start over.
      currentDetails:
        accessibleNameNotStarted: Currently, tug-of-war game not started.
        accessibleNameInProgress: Currently, tug-of-war game in progress.
        accessibleNameCompleted:  Currently, tug-of-war game completed.
        noPullersAttached:        No pullers attached to ropes.
        teamAttached:             |-
                                  { $count ->
                                    [0] No { a11y.netForceScreen.colorName } pullers are on rope.
                                    [one] { $count } { a11y.netForceScreen.colorName } puller is on rope.
                                   *[other] { $count } { a11y.netForceScreen.colorName } pullers are on rope.
                                  }
      interactionHint: Place pullers on knots to begin tug-of-war game.
    puller:
      # Note that index may be the empty string. This string will always be trimmed() removing whitespace.
      accessibleName: '{ a11y.netForceScreen.puller.size } { a11y.netForceScreen.colorName } Puller { $index }'
      size:           |-
                      { $size ->
                        [small] Small
                        [medium] Medium
                       *[large] Large
                      }
    pullerResponses:
      pullerAttachedToKnot:       '{ a11y.netForceScreen.puller.accessibleName } attached to { $knotDescription }.'
      pullerReturnedToToolbox:    '{ a11y.netForceScreen.puller.accessibleName } returned to toolbox.'
      pullerInteractionCancelled: '{ a11y.netForceScreen.puller.accessibleName } interaction cancelled.'
    returnButton:
      cartReturnedToCenter: Cart returned to center.
      accessibleName:       Return Cart
      accessibleHelpText:   Return cart to center.
    goPauseButton:
      accessibleHelpTextGo:    Start tug-of-war game.
      accessibleHelpTextPause: Pause tug-of-war game.
      cartMovingLeft:          Cart moving left.
      cartMovingRight:         Cart moving right.
      cartStationary:          Cart stationary.
      cartPaused:              Cart paused.
    netForceControlPanel:
      sumOfForces:
        accessibleName:                     Sum of Forces
        accessibleHelpText:                 Show or hide sum of forces arrow.
        accessibleContextResponseUnchecked: Sum of forces arrow hidden.
      values:
        accessibleName:                     Values
        accessibleHelpText:                 Show or hide force values.
        accessibleContextResponseChecked:   Force values shown.
        accessibleContextResponseUnchecked: Force values hidden.
      speed:
        accessibleName:                     Speed
        accessibleHelpText:                 Show or hide speedometer.
        accessibleContextResponseUnchecked: Speedometer hidden.
    playAreaControls:
      accessibleHeading: Tug-of-War Controls
  motionScreen:
    screenSummary:
      playArea:
        description:             The play area shows a horizontal surface with objects that can be moved onto a skateboard. A pusher can apply force to move objects, creating motion and demonstrating the relationship between force and movement.
        frictionDescription:     The play area shows a horizontal surface with objects that can be moved on the ground. A pusher can apply force to move objects, creating motion and demonstrating the relationship between force, friction, and movement. The surface turns to ice when friction is zero.
        accelerationDescription: The play area shows a horizontal surface with objects that can be moved on the ground. A pusher can apply force to move objects, creating motion and demonstrating the relationship between force, friction, acceleration, and movement. The surface turns to ice when friction is zero.
        objectToolbox:
          description: Drag objects from the toolboxes to place them on the skateboard. Different objects have different masses.
        appliedForceControl:
          description: Use arrow keys or mouse to control the applied force. Watch how the objects move as you change the force.
      controlArea:
        description: Use checkboxes to show or hide forces, values, masses, speed, and other measurements. Use play controls to start, pause, or reset the simulation.
      currentDetails:
        noObjectsOnSkateboard: No objects are currently on the skateboard.
        noObjectsOnGround:     No objects are currently on the ground.
        objectsOnSkateboard:   |-
                               { $count ->
                                 [one] { $count } object is on the skateboard.
                                *[other] { $count } objects are on the skateboard.
                               }
        objectsOnGround:       |-
                               { $count ->
                                 [one] { $count } object is on the ground.
                                *[other] { $count } objects are on the ground.
                               }
        motionState:
          stationary:  Objects are stationary.
          movingRight: Objects are moving to the right.
          movingLeft:  Objects are moving to the left.
        forceDescription:
          noForce:           No force is being applied.
          appliedForceRight: Applied force is pushing objects to the right.
          appliedForceLeft:  Applied force is pushing objects to the left.
      interactionHint:
        noObjects:         Drag objects from the toolboxes onto the skateboard, then use the applied force control to create motion.
        noObjectsOnGround: Drag objects from the toolboxes onto the ground, then use the applied force control to create motion.
        withObjects:       Use the applied force control to push the objects. Adjust checkboxes to show different measurements and forces.
    items:
      itemAccessibleNameWithMass: '{ $itemName }, { $mass }'
      massUnknown:                'mass unknown'
      names:
        fridge:  Fridge
        crate1:  Crate 1
        crate2:  Crate 2
        girl:    Girl
        man:     Man
        trash:   Trash Can
        mystery: Mystery Object
        bucket:  Bucket of Water
    itemToolbox:
      accessibleName:     Item Toolbox
      descriptionContent: Use arrow keys to select an item, then press Space or Enter to grab
    itemStackGroup:
      accessibleName:     Items on Skateboard
      descriptionContent: Use arrow keys to navigate between stacked items, then press Space or Enter to grab
    itemResponses:
      overToolbox:         Over toolbox
      overStack:           Over stack
      overSkateboard:      Over skateboard
      overGround:          Over ground
      droppedOnStack:      Dropped on stack
      droppedOnSkateboard: Dropped on skateboard
      droppedOnGround:     Dropped on ground
      returnedToToolbox:   Returned to toolbox
      returnedToStack:     Returned to stack
    motionControlPanel:
      force:
        accessibleName:                     Force
        accessibleHelpText:                 Explore with or without force arrows.
        accessibleContextResponseChecked:   Force arrows shown.
        accessibleContextResponseUnchecked: Force arrows hidden.
      values:
        accessibleName:                     Values
        accessibleHelpText:                 Check to show numerical values for the forces.
        accessibleContextResponseChecked:   Force values shown.
        accessibleContextResponseUnchecked: Force values hidden.
      masses:
        accessibleName:                     Masses
        accessibleHelpText:                 Check to show masses of objects.
        accessibleContextResponseChecked:   Object masses shown.
        accessibleContextResponseUnchecked: Object masses hidden.
      speed:
        accessibleName:                     Speed
        accessibleHelpText:                 Check to show the speedometer.
        accessibleContextResponseChecked:   Speedometer shown.
        accessibleContextResponseUnchecked: Speedometer hidden.
      stopwatch:
        accessibleName:                     Stopwatch
        accessibleHelpText:                 Check to show the stopwatch.
        accessibleContextResponseChecked:   Stopwatch shown.
        accessibleContextResponseUnchecked: Stopwatch hidden.
      forces:
        accessibleName:                     Forces
        accessibleHelpText:                 Explore with or without force arrows.
        accessibleContextResponseChecked:   Force arrows shown.
        accessibleContextResponseUnchecked: Force arrows hidden.
      sumOfForces:
        accessibleName:                     Sum of Forces
        accessibleHelpText:                 Check to show an arrow representing the sum of all forces.
        accessibleContextResponseChecked:   Sum of forces arrow shown.
        accessibleContextResponseUnchecked: Sum of forces arrow hidden.
      acceleration:
        accessibleName:                     Acceleration
        accessibleHelpText:                 Check to show the accelerometer.
        accessibleContextResponseChecked:   Accelerometer shown.
        accessibleContextResponseUnchecked: Accelerometer hidden.
    playAreaControls:
      accessibleHeading: Play Area Controls
    frictionSlider:
      accessibleHelpText: Set static coefficient of friction.
      contextResponse:
        smoother: Ground smoother.
        rougher:  Ground rougher.
        icy:      Ground icy.
  objectToolboxes:
    objectToolbox: Object Toolbox
    skateboard:    Skateboard
  pullers:
    pullerInstruction:   Grab puller. Once grabbed, use keyboard shortcuts to change position.
    overReturnToToolbox: Over toolbox
    overKnotDescription: 'Over { $side } knot { $number }'
    knotDescription:     '{ $side } knot { $number }'
    leftSide:            Left
    rightSide:           Right
  tugOfWar:
    heading:         Tug-of-War
    noPullersOnRope: No pullers on rope
    knotOccupied:    '{ $side } knot { $number }: { $pullerName }'
  forces:
    heading:                 Forces
    appliedForceArrow:       'Applied force arrow is { $description }, pointing { $direction }'
    frictionForceArrow:      'Friction force arrow is { $description }, pointing { $direction }'
    leftForceArrow:          'Left force arrow is { $description }'
    rightForceArrow:         'Right force arrow is { $description }'
    sumOfForcesArrow:        'Sum of forces arrow is { $description }, pointing { $direction }'
    sumOfForcesZero:         'Sum of forces is 0'
    quantitativeDescription: '{ $forceMagnitude } newtons'
    qualitativeDescriptions:
      small:          small
      medium:         medium
      mediumSmall:    medium small
      mediumLarge:    medium large
      large:          large
      veryLarge:      very large
      extremelyLarge: extremely large
      left:           left
      right:          right
  speed:
    heading:                   Speed
    cartSpeed:                 'Cart speed is { $speedDescription }.'
    cartSpeedWithAcceleration: 'Cart speed is { $speedDescription } and { $accelerationDescription }.'
    qualitativeDescriptions:
      stationary: zero
      verySlow:   very slow
      slow:       slow
      medium:     medium
      fast:       fast
    accelerationDescriptions:
      speedingUp:  'speeding up'
      slowingDown: 'slowing down'
