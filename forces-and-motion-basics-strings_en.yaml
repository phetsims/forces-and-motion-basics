none:                                  None
force:                                 Force
values:                                Values
redWins:                               Red Wins!
frictionForce:                         Friction Force
pause:                                 Pause
friction:                              Friction
forces-and-motion-basics.title:        'Forces and Motion: Basics'
leftForce:                             Left Force
appliedForce:                          Applied Force
rightForce:                            Right Force
pattern.0massUnitsKilograms:           '{0} kg'
pattern.0valueUnitsNewtons:            '{0} newtons'
acceleration:                          Acceleration
pattern.0name.1valueUnitsAcceleration: '{0}: {1} m/s<sup>2</sup>'
pattern.0name.1valueUnitsVelocity:     '{0} m/s'
lots:                                  Lots
forces:                                Forces
netForce:                              Net Force
motion:                                Motion
go:                                    Go!
sumOfForcesEqualsZero:                 Sum of Forces = 0
blueWins:                              Blue Wins!
sumOfForces:                           Sum of Forces
speed:                                 Speed
stopwatch:                             Stopwatch
return:                                Return
masses:                                Masses
pattern.0valueUnitsN:                  '{0}N'
unknownValueIndicator:                 '?'
netForcePullerColors:                  Net Force Puller Colors
blueAndRed:                            Blue and Red
purpleAndOrange:                       Purple and Orange
purpleWins:                            Purple Wins!
orangeWins:                            Orange Wins!

# keyboard help dialog strings
keyboardHelpDialog:
  fromAnywhereInSim:  From Anywhere in Screen
  startGame:          Start tug-of-war game
  pauseGame:          Pause tug-of-war game
  returnCartToCenter: Return cart to center
  pullerNavigation:   Puller Navigation
  selectPuller:       Select puller
  grabPuller:         Grab selected puller
  moveGrabbedPuller:  Move grabbed puller
  dropPuller:         Drop puller
  itemNavigation:     Item Navigation
  selectItem:         Select item
  grabItem:           Grab selected item
  moveGrabbedItem:    Move grabbed item
  dropItem:           Drop item
  adjustAppliedForce: Adjust Applied Force
  zeroAppliedForce:   Set applied force to zero

# accessibility strings
a11y:
  values:
    checkedResponse:                    Numeric values shown.
    uncheckedResponse:                  Numeric values hidden.
    accessibleHelpText:                 Show or hide force and speed values.
    withAccelerationAccessibleHelpText: Show or hide force, speed, and acceleration values.
  preferences:
    netForcePullerColors:
      accessibleHelpText: Select team colors for tug-of-war game.
  keyboardHelpDialog:
    fromAnywhereInSim:
      startGameDescription:          Start tug-of-war game with { $altOrOptionKey } plus G key.
      pauseGameDescription:          Pause tug-of-war game with { $altOrOptionKey } plus P key.
      returnCartToCenterDescription: Return cart to center with { $altOrOptionKey } plus B key.
    pullerNavigation:
      selectPullerDescription:      Select puller with Left and Right Arrow keys.
      grabPullerDescription:        Grab selected puller with Space or Enter keys.
      moveGrabbedPullerDescription: Move grabbed puller with Left and Right Arrow keys.
      dropPullerDescription:        Drop puller with Space or Enter keys.
    itemNavigation:
      selectItemDescription:      Select item with Left and Right Arrow keys.
      grabItemDescription:        Grab selected item with Space or Enter keys.
      moveGrabbedItemDescription: Move grabbed item with Left and Right Arrow keys.
      dropItemDescription:        Drop item with Space or Enter keys.
    appliedForceControls:
      zeroAppliedForceDescription: Set applied force to zero with 0 key.
  netForceScreen:
    colorName: |-
               { $color ->
                   [blue]   Blue
                   [red]    Red
                   [purple] Purple
                  *[orange] Orange
               }
    teamName:  |-
               { $color ->
                   [blue]   Blue Team
                   [red]    Red Team
                   [purple] Purple Team
                  *[orange] Orange Team
               }
    screenSummary:
      playArea:
        description: There is a tug-of-war game between { $leftColor } and { $rightColor } teams over a wheeled cart full of candy. { $leftTeamName } pullers are on left, { $rightTeamName } pullers are on right. Cart sits on flat surface with a rope attached to each side. Ropes have knots that pullers can grab. There are buttons to start or pause tug-of-war or return cart to center.
      controlArea:
        description: Turn on sum of forces, values, or speed. Reset sim to start over.
      currentDetails:
        accessibleNameNotStarted: Currently, tug-of-war game not started.
        accessibleNameInProgress: Currently, tug-of-war game in progress.
        accessibleNameCompleted:  Currently, tug-of-war game completed.
        noPullersAttached:        No pullers attached to ropes.
        teamAttached:             |-
                                  { $count ->
                                    [0] No { a11y.netForceScreen.colorName } pullers are on rope.
                                    [one] { $count } { a11y.netForceScreen.colorName } puller is on rope.
                                   *[other] { $count } { a11y.netForceScreen.colorName } pullers are on rope.
                                  }
      interactionHint: Place pullers on knots to begin tug-of-war game.
    puller:
      # Note that index may be the empty string. This string will always be trimmed() removing whitespace.
      accessibleName: '{ a11y.netForceScreen.puller.size } { a11y.netForceScreen.colorName } Puller { $index }'
      size:           |-
                      { $size ->
                        [small] Small
                        [medium] Medium
                       *[large] Large
                      }
    pullerResponses:
      pullerAttachedToKnot:       '{ a11y.netForceScreen.puller.accessibleName } attached to { $knotDescription }.'
      pullerReturnedToToolbox:    '{ a11y.netForceScreen.puller.accessibleName } returned to toolbox.'
      pullerInteractionCancelled: '{ a11y.netForceScreen.puller.accessibleName } interaction cancelled.'
    returnButton:
      cartReturnedToCenter: Cart returned to center.
      accessibleName:       Return Cart
      accessibleHelpText:   Return cart to center.
    goPauseButton:
      accessibleHelpTextGo:    Start tug-of-war game.
      accessibleHelpTextPause: Pause tug-of-war game.
      cartMovingLeft:          Cart moving left.
      cartMovingRight:         Cart moving right.
      cartStationary:          Cart stationary.
      cartPaused:              Cart paused.
    netForceControlPanel:
      sumOfForces:
        accessibleName:                     Sum of Forces
        accessibleHelpText:                 Show or hide sum of forces arrow.
        accessibleContextResponseUnchecked: Sum of forces arrow hidden.
      values:
        accessibleName:     Values
        accessibleHelpText: Show or hide force values.
      speed:
        accessibleName:                     Speed
        accessibleHelpText:                 Show or hide speedometer.
        accessibleContextResponseUnchecked: Speedometer hidden.
    playAreaControls:
      accessibleHeading: Tug-of-War Controls
  motionScreen:
    screenSummary:
      playArea:
        motionDescription:       A pusher stands on the flat ground, ready to apply force to a stack of objects on a skateboard. Objects can be moved from the toolbox to the stack.
        frictionDescription:     A pusher stands on the flat ground, ready to apply force to a stack of objects. Objects can be moved from the toolbox to the stack.
        accelerationDescription: A pusher stands on the flat ground, ready to apply force to a stack of objects. Objects can be moved from the toolbox to the stack.
        appliedForceControl:
          description: Set force applied by pusher on the stack.
      controlArea:
        motionDescription:       Turn on forces, values, or measurement tools.
        frictionDescription:     Turn on forces, values, or measurement tools. Set the roughness of the ground with the Friction slider. Reset sim to start over.
        accelerationDescription: Turn on forces, values, or measurement tools. Set the roughness of the ground with the Friction slider. Reset sim to start over.
      currentDetails:
        summary: |-
                 { $count ->
                   [0]      Currently, no objects on the { $surface }.
                   [1]      Currently, 1 object on the { $surface }. Stack is { $motionState }.
                  *[other]  Currently, { $count } objects on the { $surface }. Stack is { $motionState }.
                 }
      interactionHint: Create a stack of objects and give them a push.
    pauseButton:
      accessibleHelpText: Pause sim to step through little by little and to help make precise measurements.
    stackMovement:
      stackMovingLeft:  Stack moving left.
      stackMovingRight: Stack moving right.
      stackStationary:  Stack stationary.
    stackState:
      stationary:  stationary
      movingRight: moving right
      movingLeft:  moving left
    items:
      itemAccessibleNameWithMass: '{ $itemName }, { $mass }'
      massUnknown:                'mass unknown'
      names:
        fridge:  Fridge
        crate1:  Crate 1
        crate2:  Crate 2
        girl:    Girl
        man:     Man
        trash:   Trash Can
        mystery: Mystery Object
        bucket:  Bucket of Water
    itemToolbox:
      accessibleName:     Item Toolbox
      descriptionContent: Grab item. Once grabbed, use keyboard shortcuts to move item.
    itemStackGroup:
      accessibleName:     Items on Skateboard
      descriptionContent: Grab item. Once grabbed, use keyboard shortcuts to move item.
    itemResponses:
      overToolbox:         Over toolbox
      overStack:           Over stack
      overSkateboard:      Over skateboard
      overGround:          Over ground
      droppedOnStack:      Dropped on stack.
      droppedOnSkateboard: Dropped on skateboard.
      droppedOnGround:     Dropped on ground.
      returnedToToolbox:   Returned to toolbox.
      returnedToStack:     Returned to stack
    surface:
      skateboard: skateboard
      ground:     ground
    stackList:
      stackedOnSurface:   'Stacked on { $surface }:'
      noObjectsOnSurface: 'No objects on { $surface }.'
    pusherResponses:
      fellDownAppliedForceZero: Pusher fell down, applied force now 0 newtons.
    motionControlPanel:
      force:
        accessibleName:                     Force
        accessibleHelpText:                 Show or hide applied force arrow.
        accessibleContextResponseChecked:   Applied force arrow shown.
        accessibleContextResponseUnchecked: Applied force arrow hidden.
      values:
        accessibleName: Values
      masses:
        accessibleName:                     Masses
        accessibleHelpText:                 Show or hide masses of objects.
        accessibleContextResponseChecked:   Mass values shown.
        accessibleContextResponseUnchecked: Mass values hidden.
      speed:
        accessibleName:                     Speed
        accessibleHelpText:                 Show or hide speedometer.
        accessibleContextResponseUnchecked: Speedometer hidden.
      stopwatch:
        accessibleName:                     Stopwatch
        accessibleHelpText:                 Show or hide stopwatch.
        accessibleContextResponseChecked:   Stopwatch added to Play Area.
        accessibleContextResponseUnchecked: Stopwatch removed from Play Area.
      forces:
        accessibleName:                     Forces
        accessibleHelpText:                 Show or hide applied force and friction force arrows.
        accessibleContextResponseChecked:   Force arrows shown.
        accessibleContextResponseUnchecked: Force arrows hidden.
      sumOfForces:
        accessibleName:                     Sum of Forces
        accessibleHelpText:                 Check to show an arrow representing the sum of all forces.
        accessibleContextResponseUnchecked: Sum of forces arrow hidden.
      acceleration:
        accessibleName:                     Acceleration
        accessibleHelpText:                 Show or hide accelerometer.
        accessibleContextResponseUnchecked: Accelerometer hidden.
    playAreaControls:
      accessibleHeading: Applied Force Control
    frictionSlider:
      accessibleHelpText: Set static coefficient of friction.
      contextResponse:
        smoother: Ground smoother.
        rougher:  Ground rougher.
        icy:      Ground icy.
  objectToolboxes:
    objectToolbox: Object Toolbox
    skateboard:    Skateboard
    stack:         Stack
  pullers:
    pullerInstruction:   Grab puller. Once grabbed, use keyboard shortcuts to change position.
    overReturnToToolbox: Over toolbox
    overKnotDescription: 'Over { $side } knot { $number }'
    knotDescription:     '{ $side } knot { $number }'
    leftSide:            Left
    rightSide:           Right
  tugOfWar:
    heading:         Tug-of-War
    noPullersOnRope: No pullers on rope
    knotOccupied:    '{ $side } knot { $number }: { $pullerName }'
  forces:
    heading:                 Forces
    appliedForceArrow:       'Applied force arrow is { $description }, pointing { $direction }'
    frictionForceArrow:      'Friction force arrow is { $description }, pointing { $direction }'
    leftForceArrow:          'Left force arrow is { $description }'
    rightForceArrow:         'Right force arrow is { $description }'
    sumOfForcesArrow:        'Sum of forces arrow is { $description }, pointing { $direction }'
    sumOfForcesZero:         'Sum of forces is 0'
    quantitativeDescription: '{ $forceMagnitude } newtons'
    qualitativeDescriptions:
      small:          small
      medium:         medium
      mediumSmall:    medium small
      mediumLarge:    medium large
      large:          large
      veryLarge:      very large
      extremelyLarge: extremely large
      left:           left
      right:          right
  speed:
    heading:                       Speed
    cartSpeed:                     'Cart speed is { $speedDescription }.'
    cartSpeedWithAcceleration:     'Cart speed is { $speedDescription } and { $accelerationDescription }.'
    speedOnly:                     'Speed is { $speedDescription }.'
    speedOnlyWithAcceleration:     'Speed is { $speedDescription } and { $accelerationDescription }.'
    speedWithValue:                'Speed is { $speedDescription } at { $speedMetersPerSecond } meters per second.'
    speedWithValueAndAcceleration: 'Speed is { $speedDescription } and { $accelerationDescription } at { $speedMetersPerSecond } meters per second.'
    qualitativeDescriptions:
      stationary:    zero
      verySlow:      very slow
      slow:          slow
      medium:        medium
      fast:          fast
      veryFast:      very fast
      extremelyFast: extremely fast
  acceleration:
    heading:                           Acceleration
    accelerationOnly:                  'Acceleration is { $accelerationDescription }.'
    accelerationWithValue:             'Acceleration is { $accelerationDescription } at { $accelerationMetersPerSecondSquared } meters per second squared.'
    accelerationWithDirection:         'Acceleration is { $accelerationDescription } to the { $direction }.'
    accelerationWithDirectionAndValue: 'Acceleration is { $accelerationDescription } to the { $direction } at { $accelerationMetersPerSecondSquared } meters per second squared.'
    qualitativeDescriptions:
      zero:           zero
      verySmall:      very small
      small:          small
      moderate:       moderate
      large:          large
      veryLarge:      very large
      extremelyLarge: extremely large
      left:           left
      right:          right
    accelerationDescriptions:
      speedingUp:  'speeding up'
      slowingDown: 'slowing down'
